import React, { useEffect, useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import paymentService from '../services/PaymentService';

/**
 * This component handles the callback after 3D Secure authentication
 * It completes the payment by calling the complete-payment endpoint
 */
function PaymentCallback() {
  const [status, setStatus] = useState('processing');
  const [error, setError] = useState('');
  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    // URL'den parametreleri al
    const params = new URLSearchParams(location.search);
    const status = params.get('status');
    const data = params.get('data');
    const message = params.get('message');

    if (status === 'success' && data) {
      try {
        // JSON verisini parse et
        const paymentData = JSON.parse(decodeURIComponent(data));
        console.log('Ödeme başarılı:', paymentData);
        
        // Başarılı durumu göster
        setStatus('success');
        
        // Ödeme verilerini sessionStorage'a kaydet
        sessionStorage.setItem('payment_result', JSON.stringify(paymentData));
        
        // 2 saniye sonra başarılı sayfasına yönlendir
        setTimeout(() => {
          navigate('/payment/success', { 
            state: { 
              paymentData,
              transactionId: paymentData.TURKPOS_RETVAL_Islem_ID,
              amount: paymentData.TURKPOS_RETVAL_Odeme_Tutari
            } 
          });
        }, 2000);
      } catch (error) {
        console.error('Veri işleme hatası:', error);
        setStatus('error');
        setError('Ödeme verileri işlenirken bir hata oluştu.');
      }
    } else if (status === 'error') {
      console.error('Ödeme hatası:', message);
      setStatus('error');
      setError(message || 'Ödeme işlemi sırasında bir hata oluştu.');
    } else {
      // Eğer status ve data yoksa, backend'e yönlendir
      const apiUrl = 'https://api.aikuaiplatform.com/api/payments/callback';
      window.location.href = apiUrl;
    }
  }, [location, navigate]);

  return (
    <div className="payment-callback-container">
      <h1>Ödeme İşlemi</h1>
      
      {status === 'processing' && (
        <div className="processing">
          <p>Ödeme işleminiz tamamlanıyor, lütfen bekleyin...</p>
          <div className="spinner"></div>
        </div>
      )}
      
      {status === 'success' && (
        <div className="success">
          <p>Ödeme işleminiz başarıyla tamamlandı!</p>
          <p>Yönlendiriliyorsunuz...</p>
        </div>
      )}
      
      {status === 'error' && (
        <div className="error">
          <p>Ödeme işlemi sırasında bir hata oluştu:</p>
          <p>{error}</p>
          <button onClick={() => navigate('/payment')}>Tekrar Deneyin</button>
        </div>
      )}
    </div>
  );
}

export default PaymentCallback; 